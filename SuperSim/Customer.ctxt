#BlueJ class context
comment0.params=productList\ hour
comment0.target=Customer(java.util.ArrayList,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Customer.\n\ When\ the\ customer\ is\ created,\ the\ probability\ of\ their\ type\ (see\ below)\ is\ biased\ according\ to\ the\ hour\ of\ the\ day.\n\ The\ number\ of\ items\ a\ customer\ chooses\ is\ normally\ distributed\ with\ a\ varied\ mean\ and\ standard\ deviation\ according\ to\ the\ type.\ Assistance\ for\ using\ the\n\ nextGaussian()\ functionality\ was\ found\ on\ http\://en.wikipedia.org/wiki/Normal_distribution\ and\ http\://answers.yahoo.com/question/index?qid\=20080417012416AAB0BJw\n\ More\ detail\ can\ be\ found\ in\ the\ comments\ within\ the\ code\ itself.\n\ @param\ productList\ An\ ArrayList\ of\ Item\ passed\ in\ from\ Store.\n\ @param\ hour\ The\ hour\ of\ the\ day.\n
comment1.params=
comment1.target=java.awt.Point\ getLocation()
comment1.text=\n\ An\ accessor\ method\ for\ use\ by\ Store\ and\ other\ control\ classes.\n\ @return\ A\ Point\ object.\n
comment10.params=
comment10.target=void\ incWait()
comment10.text=\n\ A\ method\ to\ increment\ the\ time\ the\ customer\ has\ spent\ in\ the\ queue.\ Since\ all\ queue\ processing\ is\ handled\ as\ part\ of\ Checkout,\ this\ is\ called\ for\ every\ tick\ that\n\ the\ customer\ is\ in\ the\ queue,\ for\ more\ details,\ see\ the\ Checkout\ class.\n
comment11.params=
comment11.target=int\ getTimeInQueue()
comment11.text=\n\ A\ method\ very\ similar\ to\ getTimeInStore(),\ in\ that\ it\ returns\ the\ timeInQueue\ for\ statistical\ processing.\n\ @return\ The\ time\ the\ customer\ has\ spent\ in\ the\ queue.\n
comment12.params=
comment12.target=void\ walk()
comment12.text=\n\ A\ method\ to\ move\ the\ customer\ around\ the\ canvas.\ This\ method\ is\ called\ every\ time\ an\ item\ is\ added.\ The\ Controller\ class\ calls\ getLocation()\ every\ tick\ to\ reposition\n\ the\ customer\ on\ the\ canvas.\ Based\ on\ the\ nature\ of\ the\ graphics,\ the\ orientation\ of\ the\ aisles\ should\ not\ be\ changed.\ The\ graphics\ are\ based\ purely\ on\ co-ordinates.\n\ More\ detail\ can\ be\ found\ in\ the\ pickNewPosition()\ method.\n
comment13.params=
comment13.target=void\ moveY()
comment14.params=
comment14.target=void\ moveX()
comment15.params=
comment15.target=void\ getPosition()
comment16.params=
comment16.target=void\ walkToCheckout()
comment17.params=
comment17.target=void\ pickNewPosition()
comment2.params=
comment2.target=java.lang.String\ getID()
comment2.text=\n\ An\ accessor\ method,\ used\ as\ part\ of\ Checkout,\ when\ a\ customer's\ trolley\ has\ been\ scanned,\ the\ ID\ is\ written\ out\ to\ a\ file.\n\ @return\ A\ string\ of\ the\ customer's\ ID.\n
comment3.params=
comment3.target=double\ addItem()
comment3.text=\n\ This\ method\ is\ called\ every\ tick\ in\ the\ Controlling\ classes.\n\ To\ start\ with,\ and\ to\ prevent\ 'synchronised\ shopping',\ a\ randomly\ generated\ number\ is\ used\ to\ determine\ if\ a\ customer\ should\ pick\ up\ an\ item\ and\ walk\ on\ this\ tick.\n\ The\ amount\ of\ time\ they\ have\ left\ in\ the\ store\ is\ then\ decreased\ by\ the\ time\ per\ item,\ or\ per\ tick.\ Not\ a\ huge\ amount\ of\ difference\ occurs\ in\ the\ simulation\n\ results\ for\ either.\n\ Once\ the\ customer\ has\ all\ their\ items,\ the\ shoppingTime\ is\ set\ to\ 0,\ which\ the\ Store\ class\ picks\ up\ on\ and\ further\ customer\ processing\ is\ done.k\n\ @return\ The\ price\ of\ the\ item\ for\ statistic\ collection.\n
comment4.params=
comment4.target=int\ getTrolleyCount()
comment4.text=\n\ An\ accessor\ method\ for\ use\ in\ the\ Store\ and\ Checkout\ classes\ for\ statistical\ collection.\n\ @return\ The\ number\ of\ items\ in\ the\ trolley\ ArrayList\n
comment5.params=
comment5.target=long\ getShoppingTime()
comment5.text=\n\ An\ accessor\ method\ for\ use\ in\ the\ Store\ class\ to\ tell\ when\ a\ customer\ has\ finished\ shopping.\n\ @return\ The\ amount\ of\ time\ the\ customer\ should\ spend\ picking\ items.\n
comment6.params=newTime
comment6.target=void\ setShoppingTime(long)
comment6.text=\n\ A\ method\ to\ change\ the\ shoppingTime\ used\ only\ within\ this\ class.\n\ @param\ newTime\ The\ new\ shoppingTime\n
comment7.params=
comment7.target=java.util.ArrayList\ getTrolley()
comment7.text=\n\ An\ accessor\ method\ to\ make\ use\ of\ the\ 'trolley'\ in\ the\ Checkout\ and\ Store\ classes\ for\ statistic\ collection.\n\ @return\ trolley\ An\ ArrayList\ of\ Item\ containing\ what\ the\ customer\ has\ 'chosen'\n
comment8.params=
comment8.target=Item\ removeTrolleyItem()
comment8.text=\n\ A\ method\ called\ from\ Checkout\ when\ scanning\ items\ in\ a\ customer's\ trolley.\n\ @return\ The\ item\ object\ that\ was\ removed\ from\ the\ trolley.\n
comment9.params=
comment9.target=int\ getTimeInStore()
comment9.text=\n\ Again,\ for\ statistical\ collection,\ this\ method\ will\ return\ the\ total\ time\ spent\ in\ the\ store\ from\ arrival\ to\ leaving\ the\ checkout.\n\ @return\ The\ time\ spent\ in\ the\ store.\n
numComments=18
