#BlueJ class context
comment0.params=
comment0.target=Store()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Store\n
comment1.params=hour
comment1.target=void\ Run(int)
comment1.text=\ \n\ Runs\ once\ per\ tick,\ controls\ customers\ on\ the\ shop\ floor\ in\ customerBrowsing\ and\ controls\ passing\ customers\ to\ the\ queue\ area.\n\ @param\ hour\ The\ current\ global\ hour\ the\ store\ is\ in.\n
comment10.params=hour
comment10.target=void\ createCustomer(int)
comment10.text=\n\ Method\ to\ decide\ if\ a\ customer\ will\ arrive\ on\ this\ tick\ and\ if\ so,\ create\ one\ and\ add\ to\ the\ shop\ floor.\n\ @param\ hour\ The\ global\ hour\ the\ customer\ is\ created\ in.\n
comment11.params=currentHour
comment11.target=void\ calcCurrentProbability(int)
comment11.text=\n\ Calculates\ the\ probability\ that\ a\ customer\ will\ enter\ the\ store\ at\ the\ current\ hour.\n\ @param\ currentHour\ The\ current\ global\ hour.\n
comment12.params=myCustomer\ express
comment12.target=void\ addToSmallestQueue(Customer,\ boolean)
comment12.text=\n\ Works\ out\ which\ checkout\ in\ checkoutList\ has\ the\ smallest\ queue\ length\ in\ terms\ of\ number\ of\ items\ in\ the\ queue\ and\ then\ adds\ that\ customer\ to\ the\ queue.\n\ @param\ myCustomer\ The\ customer\ to\ be\ added\ to\ the\ queue.\n\ @param\ express\ Toggles\ if\ the\ customer\ is\ eligable\ to\ join\ an\ express\ queue.\n
comment2.params=
comment2.target=double\ currentAverageLength()
comment2.text=\n\ Gets\ the\ current\ Average\ Queue\ length.\n\ @return\ average\ The\ average\ number\ of\ people\ in\ the\ queues\ as\ a\ double.\n
comment3.params=
comment3.target=void\ updateCumulativeAverage()
comment4.params=
comment4.target=int\ getCustomerCounter()
comment4.text=\n\ Passes\ statistic\ of\ the\ total\ number\ of\ customers\ to\ the\ controller.\n\ @return\ customerCounter\ The\ sum\ of\ customers.\n
comment5.params=runTime
comment5.target=double\ getAverageInStore(int)
comment6.params=runTime
comment6.target=double\ getAverageQueue(int)
comment7.params=
comment7.target=double\ getShopProfit()
comment8.params=cust
comment8.target=void\ calcAverageInStore(Customer)
comment8.text=\n\ Totals\ up\ the\ time\ spent\ by\ all\ customers\ in\ store.\n
comment9.params=runTime
comment9.target=double\ getAverageWait(int)
numComments=13
